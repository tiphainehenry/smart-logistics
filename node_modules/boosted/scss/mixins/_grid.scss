/// Grid system
//
// Generate semantic grid columns with these mixins.
// Boosted mod : keep variable gutter width (removed from bootstrap)
@mixin make-container($gutter: $grid-gutter-width) {
  width: 100%;
  @include make-gutters($gutter); // Boosted mod : gutter depends on breakpoint
  margin-right: auto;
  margin-left: auto;
}

// Boosted mod : gutter depends on breakpoint
@mixin make-gutters($gutter: $grid-gutter-width / 2, $property: padding, $breakpoint: $grid-gutter-breakpoint, $gutter-sm: $grid-gutter-width / 4) {
  #{$property}-right: #{$gutter-sm};
  #{$property}-left: #{$gutter-sm};

  @include media-breakpoint-up($breakpoint) {
    #{$property}-right: #{$gutter};
    #{$property}-left: #{$gutter};
  }
}
// end mod

@mixin make-row($gutter: $grid-gutter-width) {
  display: flex;
  flex-wrap: wrap;
  @include make-gutters(-$gutter, margin); // Boosted mod : gutter depends on breakpoint
}

// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
  @include deprecate("The `make-container-max-widths` mixin", "v4.5.3", "v5");
}

// Boosted mod : fluid containers aren't full width â†’ include margins
@mixin make-container-fluid-widths() {
  @each $breakpoint, $container-margin in $container-fluid-margin-widths {
    @include media-breakpoint-up($breakpoint) {
      max-width: #{100% - ($container-margin * 2)};
    }
  }
}
// End mod

@mixin make-col-ready($gutter: $grid-gutter-width) {
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  min-height: 1px; // Prevent collapsing
  @include make-gutters($gutter); // Boosted mod : gutter depends on breakpoint
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
  max-width: 100%; // Reset earlier grid tiers
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

// Row columns
//
// Specify on a parent element(e.g., .row) to force immediate children into NN
// numberof columns. Supports wrapping to new lines, but does not do a Masonry
// style grid.
@mixin row-cols($count) {
  > * {
    flex: 0 0 100% / $count;
    max-width: 100% / $count;
  }
}
