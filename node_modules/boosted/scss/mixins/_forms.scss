// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-focus-border-color` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus($ignore-warning: false) {
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    @if $enable-shadows {
      @include box-shadow($input-box-shadow, $input-focus-box-shadow);
    } @else {
      // Boosted mod, remove box shadow!
      // Avoid using mixin so we can pass custom focus shadow properly
      // box-shadow: $input-focus-box-shadow;
    }
  }
  @include deprecate("The `form-control-focus()` mixin", "v4.4.0", "v5", $ignore-warning);
}

// This mixin uses an `if()` technique to be compatible with Dart Sass
// See https://github.com/sass/sass/issues/1873#issuecomment-152293725 for more details
@mixin form-validation-state-selector($state) {
  @if ($state == "valid" or $state == "invalid") {
    .was-validated #{if(&, "&", "")}:#{$state},
    #{if(&, "&", "")}.is-#{$state} {
      @content;
    }
  } @else {
    #{if(&, "&", "")}.is-#{$state} {
      @content;
    }
  }
}

@mixin form-validation-state($state, $color, $icon) {
  // Boosted mod: valid ≠ invalid
  @if $state == "valid" {
    .#{$state}-feedback {
      @extend .sr-only;
    }

    @if $enable-validation-icons {
      .form-control {
        @include form-validation-state-selector($state) {
          background: escape-svg($icon) no-repeat right map-get($spacers, 2) center / $spacer;
        }
      }
    }
  } @else {
    .#{$state}-feedback {
      display: none;
      width: 100%;
      margin-top: $form-feedback-margin-top;
      @include font-size($form-feedback-font-size);
      font-weight: $font-weight-bold; // Boosted mod
      // color: $color; // Boosted mod

      // Boosted mod: status should not rely on color only
      @if $enable-validation-icons {
        &::before {
          display: inline-block;
          flex-shrink: 0;
          align-self: center;
          width: $form-feedback-icon-size;
          height: $form-feedback-icon-size;
          margin-right: map-get($spacers, 1);
          content: "";
          background: escape-svg($form-feedback-icon-invalid) no-repeat;
        }
      }
    }
  }
  // end mod

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
    margin-top: .1rem;
    @include font-size($form-feedback-tooltip-font-size);
    line-height: $form-feedback-tooltip-line-height;
    color: color-yiq($color);
    background-color: rgba($color, $form-feedback-tooltip-opacity);
    @include border-radius($form-feedback-tooltip-border-radius);
  }

  // Boosted mod
  @if $state != "valid" {
    @include form-validation-state-selector($state) {
      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: flex; // Boosted mod
      }
    }

    .form-control {
      @include form-validation-state-selector($state) {
        border-color: $color;

        // @if $enable-validation-icons {
        //   padding-right: $input-height-inner;
        //   background-image: escape-svg($icon);
        //   background-repeat: no-repeat;
        //   background-position: right $input-height-inner-quarter center;
        //   background-size: $input-height-inner-half $input-height-inner-half;
        // }

        &:focus {
          border-color: $input-focus-border-color;
          // box-shadow: 0 0 0 $input-focus-width rgba($color, .25); // Boosted mod, remove box shadow!
        }
      }
    }
  }
  // end mod

  // stylelint-disable-next-line selector-no-qualifying-type
  textarea.form-control {
    @include form-validation-state-selector($state) {
      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-position: top $input-height-inner-quarter right $input-height-inner-quarter;
      }
    }
  }

  .custom-select {
    @include form-validation-state-selector($state) {
      // Boosted mod
      @if $state != "valid" {
        border-color: $color;
      }
      // end mod

      @if $enable-validation-icons {
        padding-right: $custom-select-feedback-icon-padding-right;
        // background: $custom-select-background, escape-svg($icon) $custom-select-bg no-repeat $custom-select-feedback-icon-position / $custom-select-feedback-icon-size; // Boosted mod
      }

      // Boosted mod
      @if $state != "valid" {
        &:focus {
          border-color: $input-focus-border-color;
          // box-shadow: 0 0 0 $input-focus-width rgba($color, .25); // Boosted mod, remove box shadow!
        }
      }
      // end mod
    }
  }

  .form-check-input {
    @include form-validation-state-selector($state) {
      // Boosted mod: label color doesn't change
      // ~ .form-check-label {
      //  color: $color;
      // }
      // end mod

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  // Boosted mod: custom-checkbox ≠ custom-radio
  // stylelint-disable declaration-no-important
  .custom-control-input {
    @include form-validation-state-selector($state) {
      ~ .custom-control-label {
        // color: $color; // Boosted mod: label color doesn't change

        &::before {
          color: $color !important;
          border-color: currentColor !important;
          @include transition(none);
        }
      }

      &:active ~ .custom-control-label::before {
        background: currentColor !important;
      }
    }
  }

  .custom-checkbox .custom-control-input {
    @include form-validation-state-selector($state) {
      &:checked ~ .custom-control-label::before {
        background: currentColor !important;
      }
    }
  }

  .custom-radio .custom-control-input {
    @include form-validation-state-selector($state) {
      ~ .custom-control-label {
        &::after {
          border-color: currentColor !important;
          @include transition(none);
        }
      }
    }
  }
  // stylelint-enable declaration-no-important
  // end mod

  // custom file
  .custom-file-input {
    @include form-validation-state-selector($state) {
      // Boosted mod
      @if $state != "valid" {
        ~ .custom-file-label {
          border-color: $color;
        }

        &:focus {
          ~ .custom-file-label {
            border-color: $input-focus-border-color;
            // box-shadow: 0 0 0 $input-focus-width rgba($color, .25);// Boosted mod, remove box shadow!
          }
        }
      }
      // end mod
    }
  }
}
