// stylelint-disable declaration-no-important

//
// Text
//

.text-monospace { font-family: $font-family-monospace !important; }

// Alignment

//.text-justify  { text-align: justify !important; } // Boosted mod
.text-wrap     { white-space: normal !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate { @include text-truncate(); }

// Responsive alignment

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left   { text-align: left !important; }
    .text#{$infix}-right  { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Transformation

.text-lowercase  { text-transform: lowercase !important; }
//.text-uppercase  { text-transform: uppercase !important; } // Boosted mod
.text-capitalize { text-transform: capitalize !important; }

// Weight and italics

// Boosted mod: anything but 400 and 700 is forbidden by Orange Typography Guidelines
// @see https://brand.orange.com/guidelines/typography/
//.font-weight-light   { font-weight: $font-weight-light !important; }
//.font-weight-lighter { font-weight: $font-weight-lighter !important; }
.font-weight-normal  { font-weight: $font-weight-normal !important; }
.font-weight-bold    { font-weight: $font-weight-bold !important; }
//.font-weight-bolder  { font-weight: $font-weight-bolder !important; }
.font-italic         { font-weight: $font-weight-bold !important; }
// end mod

// Contextual colors

// Boosted mod: ensure contrast
.text-white {
  color: $white !important;
  background-color: $black;
}
// end mod

@each $color, $value in $theme-colors {
  // Boosted mod: disallow functionnal colors for text
  @if ($value != $primary) and ($value != $success) and ($value != $danger) and ($value != $info) and ($value != $warning) {
    @include text-emphasis-variant(".text-#{$color}", $value, true);
  }
  // end mod
}

// Boosted mod: ensure contrast
.text-primary {
  color: $orange-2 !important;

  a#{&} {
    @include hover-focus() {
      color: darken($orange-2, $emphasized-link-hover-darken-percentage) !important;
    }
  }
}

.text-body {
  color: $body-color !important;
  background-color: $body-bg;
}

.text-muted {
  color: $text-muted !important;
  background-color: $white;
}

.bg-dark,
.table-dark,
.navbar-dark {
  @include text-emphasis-variant(".text-primary", $primary, true);

  .text-body {
    color: $body-bg !important;
    background-color: $body-color;
  }

  .text-muted {
    color: $text-muted-dark !important;
    background-color: $black;
  }
}
// end mod

//.text-black-50 { color: rgba($black, .5) !important; } // Boosted mod
//.text-white-50 { color: rgba($white, .5) !important; } // Boosted mod

// Misc

.text-hide {
  @include text-hide($ignore-warning: true);
}

.text-decoration-none { text-decoration: none !important; }

.text-break {
  word-break: break-word !important; // Deprecated, but avoids issues with flex containers
  word-wrap: break-word !important; // Used instead of `overflow-wrap` for IE & Edge Legacy
}

// Reset

.text-reset { color: inherit !important; }
